JavaScript Reference Techniques

FAQ: How to target Javascript for Legacy browsers?
Ans:  By enclosing the JavaScript code in HTML comments.

Syntax:
        <script type="text/javascript">
            <!--
                function  PrintPage()
                {
                window.print();
                }
             -->
        </script>

3. JavaScript in External File

- Add a new JavaScript file into "src/scripts" folder.
                "printing.js"
 
- Add your JavaScript function in ".js" file

                printing.js
"use strict";
<!--
    function PrintPage()
    {
      window.print();
    }
-->

- Link JavaScript file to HTML page

  <script  type="text/javascript"  src="../src/scripts/printing.js">

  </script>


Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script type="text/javascript" src="../src/scripts/printing.js">
    </script>
</head>
<body>
    <h2>Click Print Button to Print Page</h2>
    <button onclick="PrintPage()">Print</button>
</body>
</html>

Note: External file for web page will increase the number of requests and also the page load time.

FAQ: How to Minify?
Ans : By using any minification tool. Minify is the process of compressing JS file.

 https://jsminify.org/  => paste your code => minify => copy => add to "printing.min.js"


                    How Javascript refers HTML elements?
                    ----------------------------------------------------
1. JavaScript can refer HTML elements by using DOM hierarchy
 
Syntax:
    window.document.images[ ]
    window.document.forms[].elements[]

   Changing the position of any element in page needs change in the code snippet.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script type="text/javascript">
        function bodyload(){
            window.document.images[0].src="../public/images/a1.jpg";
            window.document.forms[0].elements[1].value = "Register";
            window.document.forms[1].elements[1].value = "Login";
        }
    </script>
</head>
<body onload="bodyload()">
    <div>
        <img width="100" height="100">
    </div>
    <div>
        <form>
            <h2>Register</h2>
            User Name : <input type="text"> <input type="button">
        </form>
    </div>
    <div>
        <form>
            <h2>Login</h2>
            Email: <input type="email"> <input type="button">
        </form>
    </div>
</body>
</html>

2. JavaScript can refer HTML elements by using their reference "name".

Syntax:
        <img  name="pic">

         {
            pic.src="";
        }
   
   - You can't refer any child element directly. It must be accessed only with reference
      of its parent.
   
                    btnLogin.value = ""                    // invalid
                    frmLogin.btnLogin.value=""        // valid
   
   - "name" attribute can be common for several elements.

            <input type="radio" name="gender"  value="male">
            <input type="radio"  name="gender" value="female">

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script type="text/javascript">
        function bodyload(){
           pic.src="../public/images/a2.jpg";
           frmRegister.btnRegister.value = "Register";
           frmLogin.btnLogin.value = "Login";
        }
    </script>
</head>
<body onload="bodyload()">
    <div>
        <img width="100" height="100" name="pic">
    </div>
    <div>
        <form name="frmRegister">
            <h2>Register</h2>
            User Name :   <input type="text" name="txtName"> <input type="button" name="btnRegister">
        </form>
    </div>
    <div>
        <form name="frmLogin">
            <h2>Login</h2>
            Email: <input type="email" name="txtEmail"> <input type="button" name="btnLogin">
        </form>
    </div>
</body>
</html>

3. JavaScript can refer HTML elements by using their "ID"
    JavaScript provides a document method

                "document.getElementById()"

    You can access any element from any hierarchy directly.

Syntax:
        <img  id="pic">
   
         {
            document.getElementById("pic").src=" ";            
         }

   - ID is a selector used for CSS hence Javascript ID reference conflicts with CSS ID.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script type="text/javascript">
        function bodyload(){
            document.getElementById("pic").src = "../public/images/a3.jpg";
            document.getElementById("btnRegister").value = "Register";
            document.getElementById("btnLogin").value = "Login";
        }
    </script>
   
</head>
<body onload="bodyload()">
    <div>
        <img width="100" id="pic" height="100" name="pic">
    </div>
    <div>
        <form name="frmRegister">
            <h2>Register</h2>
            User Name :   <input type="text" name="txtName"> <input id="btnRegister" type="button" name="btnRegister">
        </form>
    </div>
    <div>
        <form name="frmLogin">
            <h2>Login</h2>
            Email: <input type="email" name="txtEmail"> <input id="btnLogin" type="button" name="btnLogin">
        </form>
    </div>
</body>
</html>

4. JavaScript can refer HTML elements by using CSS selectors.
    JavaScript provides a document method

            "document.querySelector()"
Syntax:
        <img class="card-img-top">

        {
          document.querySelector(".card-img-top").src = " ";
        }

        <input type="submit">

        {
           document.querySelector("input[type=submit]").value = "Register";
        }

        <input type="button" id="btnLogin">

        {
           document.querySelector("#btnLogin").value = "";
        }

                "input[type=checkbox]+div"

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script type="text/javascript">
        function bodyload(){
            document.querySelector("img").src= "../public/images/a4.jpg";
            document.querySelector("#btnRegister").value = "Register";
            document.querySelector(".btn-primary").value = "Login";
        }
    </script>
    <style>
        .btn-primary {
            background-color: yellow;
        }
    </style>
</head>
<body onload="bodyload()">
    <div>
        <img width="100" id="pic" height="100" name="pic">
    </div>
    <div>
        <form name="frmRegister">
            <h2>Register</h2>
            User Name :   <input type="text" name="txtName"> <input id="btnRegister" type="button" name="btnRegister">
        </form>
    </div>
    <div>
        <form name="frmLogin">
            <h2>Login</h2>
            Email: <input type="email" name="txtEmail"> <input id="btnLogin" class="btn-primary" type="button" name="btnLogin">
        </form>
    </div>
</body>
</html>